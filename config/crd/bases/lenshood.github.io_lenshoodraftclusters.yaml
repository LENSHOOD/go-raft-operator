---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: lenshoodraftclusters.lenshood.github.io
spec:
  group: lenshood.github.io
  names:
    kind: LenshoodRaftCluster
    listKind: LenshoodRaftClusterList
    plural: lenshoodraftclusters
    singular: lenshoodraftcluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LenshoodRaftCluster is the Schema for the lenshoodraftclusters
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LenshoodRaftClusterSpec defines the desired state of LenshoodRaftCluster
            properties:
              replica:
                description: Replica defines how many raft instance exists in a single
                  cluster
                type: integer
              version:
                description: Version defines lenshood raft version
                type: string
            required:
            - replica
            - version
            type: object
          status:
            description: LenshoodRaftClusterStatus defines the observed state of LenshoodRaftCluster
            properties:
              ids:
                items:
                  type: string
                type: array
              state:
                type: integer
            required:
            - ids
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
